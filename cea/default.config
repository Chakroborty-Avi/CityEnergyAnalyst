[general]
default-scenario: %(TEMP)s\reference-case-open\baseline
weather: %(CEA.DB)s\weather\Zurich.epw

[demand]
heating-season-start: 2017-08-01
heating-season-end: 2017-03-01
has-heating-season = True
cooling-season-start: 2017-03-02
cooling-season-end: 2017-07-31
has-cooling-season = True

[solar]
# site specific input
# format: yyyy-mm-dd
date-start = 2016-01-01

# type of panels
# for PVT, please choose type_PVpanel = 'PV1', type_SCpanel = 'SC1'
# PV1: monocrystalline, PV2: poly, PV3: amorphous. please refer to supply system database.
type-PVpanel = PV1

# SC1: flat plat collectors, SC2: evacuated tubes
type-SCpanel = SC1

# installed locations
# flag for considering panels on roof
panel-on-roof = True

# flag for considering panels on wall
panel-on-wall = True

# filtering criteria: at least a minimum production of this % from the maximum in the area.
min-radiation = 0.75

# panel spacing
# desired hours of solar window on the solstice
solar-window-solstice = 4

# inlet temperature of solar collectors [C]
T-in-SC = 75
# inlet temperature of PVT panels [C]
T-in-PVT = 35
# pressure losses per length of pipe according to Solar District Heating Guidelines, [Pa/m]
dpl = 200
# additional loss factor due to accessories
fcr = 1.3
# water density [kg/m3]
Ro = 1000
# pump efficiency
eff-pumping = 0.6

# solar collectors heat losses
# linear heat transmittance coefficient of piping (2*pi*k/ln(Do/Di))) [W/mK]
k-msc-max = 0.217

[radiation-daysim]
RAD_PARMS = {
'RAD_N': 2,
'RAD_AF': 'file',
'RAD_AB': 4,
'RAD_AD': 512,
'RAD_AS': 256,
'RAD_AR': 128,
'RAD_AA': 0.15,
'RAD_LR': 8,
'RAD_ST': 0.15,
'RAD_SJ': 0.7,
'RAD_LW': 0.002,
'RAD_DJ': 0.7,
'RAD_DS': 0.15,
'RAD_DR': 3,
'RAD_DP': 512,
}


# GRID FOR THE SENSORS
SEN_PARMS = {
'X_DIM': 100, # maximum so there is only one point per surface
'Y_DIM': 100, # maximum so there is only one point per surface
}
# terrain parameters
TERRAIN_PARAMS = {'e_terrain': 0.8} #reflection for the terrain.

# simulation parameters
SIMUL_PARAMS = {'n_build_in_chunk':10, # min number of buildings for multiprocessing
                'multiprocessing': False}  # limit the number if running out of memory

# geometry simplification
SIMPLIFICATION_PARAMS = {'zone_geometry': 2,     #level of simplification of the zone geometry
                         'surrounding_geometry':5,#level of simplification of the district geometry
                         'consider_windows': True, #boolean to consider or not windows in the geometry
                         'consider_floors':True} #boolean to consider or not floors in the geometry