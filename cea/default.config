[general]
scenario = C:\reference-case-open\baseline
scenario.type = PathParameter
scenario.help = (full) path to the scenario to run

weather = Zug
weather.type = WeatherPathParameter
weather.help = either a full path to a weather file or the name of one of the weather files shipped with the CEA

multiprocessing = true
multiprocessing.type = BooleanParameter
multiprocessing.help = run

region = CH
region.type = ChoiceParameter
region.choices = CH SIN custom
region.help = the region to use for the databases (either CH or SIN) - set to "custom" if you want to edit them


[data-helper]
archetypes = comfort architecture HVAC internal-loads
archetypes.type = ListParameter
archetypes.help = List of archetypes to process, selection is enabled to comfort, architecture, HVAC and internal-loads

[demand-graphs]
analysis-fields = Ealf_kWh Qhsf_kWh Qwwf_kWh Qcsf_kWh
analysis-fields.type = ListParameter
analysis-fields.help = list of fields in the demand output to analyze

[heatmaps]
file-to-analyze = outputs/data/demand/Total_demand.csv
file-to-analyze.type = RelativePathParameter
file-to-analyze.help = file name to analyze (relative path name to general/scenario)

analysis-fields = Qcs_MWhyr Qhs_MWhyr
analysis-fields.type = ListParameter
analysis-fields.help = space-separated list of columns in the file to analyze

[operation-costs]
plot-qww = true
plot-qww.type = BooleanParameter
plot-qww.help = Set to true to plot Qww

plot-qhs = true
plot-qhs.type = BooleanParameter
plot-qhs.help = Set to true to plot Qhs

plot-qcs = true
plot-qcs.type = BooleanParameter
plot-qcs.help = Set to true to plot Qcs

plot-qcdata = true
plot-qcdata.type = BooleanParameter
plot-qcdata.help = Set to true to plot Qcdata

plot-qcrefri = true
plot-qcrefri.type = BooleanParameter
plot-qcrefri.help = Set to true to plot Qcrefri

plot-eal = true
plot-eal.type = BooleanParameter
plot-eal.help = Set to true to plot Eal

plot-eaux = true
plot-eaux.type = BooleanParameter
plot-eaux.help = Set to true to plot Eaux

plot-epro = true
plot-epro.type = BooleanParameter
plot-epro.help = Set to true to plot Epro

plot-edata = true
plot-edata.type = BooleanParameter
plot-edata.help = Set to true to plot Edata

[emissions]
emissions-variables = Qcs Qhs Qcrefri Eal Epro Eaux Qww Edata Qcdata
emissions-variables.type = ListParameter
emissions-variables.help = List of variables to create separate files for (choose from
                           Qcs Qhs Qcrefri Eal Epro Eaux Qww Edata Qcdata)

[embodied-energy]
year-to-calculate = 2020
year-to-calculate.type = IntegerParameter
year-to-calculate.help = The year to base the calculations on

[scenario-plots]
project = C:\reference-case-open
project.type = PathParameter
project.help = path to the folder containing the scenarios

scenarios = baseline scenario1 scenario2
scenarios.type = ListParameter
scenarios.help = list of scenarios to plot (subdirectories of the project)

output-file = C:\reference-case-open\scenario-plots.pdf
output-file.type = PathParameter
output-file.help = path of the output pdf file to create

[benchmark-graphs]
project = c:\reference-case-open
project.type = PathParameter
project.help = path to the folder containing the scenarios

scenarios = baseline scenario1 scenario2
scenarios.type = ListParameter
scenarios.help = list of scenarios to plot (subdirectories of the project)

output-file = C:\reference-case-open\benchmark-graphs.pdf
output-file.type = PathParameter
output-file.help = path of the output pdf file to create

[extract-reference-case]
destination = C:\
destination.type = PathParameter
destination.help = destination folder to extract the reference case to. Since the reference case has subfolders, the
                   resulting scenario for the default (``C:\``) will be: ``C:\reference-case-open\baseline``.

[demand]
heating-season-start = 2017-08-01
heating-season-start.type = DateParameter

heating-season-end = 2017-03-01
heating-season-end.type = DateParameter

has-heating-season = true
has-heating-season.type = BooleanParameter

cooling-season-start = 2017-03-02
cooling-season-start.type = DateParameter

cooling-season-end = 2017-07-31
cooling-season-end.type = DateParameter

has-cooling-season = true
has-cooling-season.type = BooleanParameter

use-dynamic-infiltration-calculation = false
use-dynamic-infiltration-calculation.type = BooleanParameter
use-dynamic-infiltration-calculation.help = set to true to use the dynamic infiltration calculation (takes longer!)

use-daysim-radiation = true
use-daysim-radiation.type = BooleanParameter
use-daysim-radiation.help = set to false to use ArcGIS radiation as input, default is true

[radiation]
latitude =
latitude.type = RealParameter
latitude.help = latitude of the project - leave blank to calculate the latitude from the shape files

longitude =
longitude.type = RealParameter
longitude.help = longitude of the project - leave blank to calculate the longitude from the shape files

year =  2014
year.type = IntegerParameter
year.help = the year to calculate radiation for

[solar]
date-start = 2016-01-01
date-start.type = DateParameter
date-start.help =  site specific input (format: yyyy-mm-dd)

type-PVpanel = PV1
type-PVpanel.type = ChoiceParameter
type-PVpanel.choices = PV1 PV2 PV3
type-PVpanel.help = type of panels, for PVT, please choose type_PVpanel = 'PV1', type_SCpanel = 'SC1',
                    PV1: monocrystalline, PV2: poly, PV3: amorphous. please refer to supply system database.

type-SCpanel = SC1
type-SCpanel.type = ChoiceParameter
type-SCpanel.choices = SC1 SC2
type-SCpanel.help = type of solar collector, SC1: flat plat collectors, SC2: evacuated tubes

panel-on-roof = True
panel-on-roof.type = BooleanParameter
panel-on-roof.help = installed locations, flag for considering panels on roof

panel-on-wall = True
panel-on-wall.type = BooleanParameter
panel-on-wall.help = installed locations, flag for considering panels on wall

min-radiation = 0.75
min-radiation.type = RealParameter
min-radiation.help = filtering criteria: at least a minimum production of this % from the maximum in the area.

solar-window-solstice = 4
solar-window-solstice.type = IntegerParameter
solar-window-solstice.help = desired hours of solar window on the solstice for spacing panels.

T-in-SC = 75
T-in-SC.type = RealParameter
T-in-SC.help = inlet temperature of solar collectors [C]

T-in-PVT = 35
T-in-PVT.type = RealParameter
T-in-PVT.help = inlet temperature of PVT panels [C]

dpl = 200
dpl.type = RealParameter
dpl.help = pressure losses per length of pipe according to Solar District Heating Guidelines, [Pa/m]

fcr = 1.3
fcr.type = RealParameter
fcr.help = additional loss factor due to accessories

Ro = 1000
Ro.type = RealParameter
Ro.help = water density [kg/m3]

eff-pumping = 0.6
eff-pumping.type = RealParameter
eff-pumping.help = pump efficiency

k-msc-max = 0.217
k-msc-max.type = RealParameter
k-msc-max.help = solar collectors heat losses, linear heat transmittance coefficient of piping (2*pi*k/ln(Do/Di))) [W/mK]

[radiation-daysim]
buildings =
buildings.type = ListParameter
buildings.help = a list of buildings to run the simulation for - leave blank to simulate all buildings

rad-ab = 4
rad-ab.type = IntegerParameter
rad-ab.help = Daysism radiation simulation parameter, number of ambient bounces

rad-ad = 512
rad-ad.type = IntegerParameter
rad-ad.help = Daysism radiation simulation parameter, number of ambient divisions

rad-as = 32
rad-as.type = IntegerParameter
rad-as.help = Daysism radiation simulation parameter, number of ambient super-samples

rad-ar = 20
rad-ar.type = IntegerParameter
rad-ar.help = Daysism radiation simulation parameter, ambient resolution

rad-aa = 0.15
rad-aa.type = RealParameter
rad-aa.help = Daysism radiation simulation parameter, ambient accurracy

rad-lr = 8
rad-lr.type = IntegerParameter
rad-lr.help = Daysism radiation simulation parameter, maximum number of reflections

rad-st = 0.5
rad-st.type = RealParameter
rad-st.help = Daysism radiation simulation parameter, specular sampling threshold

rad-sj = 0.7
rad-sj.type = RealParameter
rad-sj.help = Daysism radiation simulation parameter, specular sampling jitter

rad-lw = 0.05
rad-lw.type = RealParameter
rad-lw.help = Daysism radiation simulation parameter, minimum weight of each ray

rad-dj = 0.7
rad-dj.type = RealParameter
rad-dj.help = Daysism radiation simulation parameter. direct jitter

rad-ds = 0
rad-ds.type = RealParameter
rad-ds.help = Daysism radiation simulation parameter, direct sampling ration

rad-dr = 0
rad-dr.type = IntegerParameter
rad-dr.help = Daysism radiation simulation parameter, number of relays from secondary sources

rad-dp = 32
rad-dp.type = IntegerParameter
rad-dp.help = Daysism radiation simulation parameter, secondary source presampling density

sensor-x-dim = 200
sensor-x-dim.type = IntegerParameter
sensor-x-dim.help = GRID FOR THE SENSORS, use 200 (maximum) if you want only one point per surface

sensor-y-dim = 200
sensor-y-dim.type = IntegerParameter
sensor-y-dim.help = GRID FOR THE SENSORS, use 200 (maximum) if you want only one point per surface = 5

albedo = 0.2
albedo.type = RealParameter
albedo.help = terrain parameters, reflection for the terrain

n-buildings-in-chunk = 100
n-buildings-in-chunk.type = IntegerParameter
n-buildings-in-chunk.help = simulation parameters, min number of groups of buildings sent for multiprocessing
                            (the lesss, the less the number of sensors to evaluate limit the number if running out of
                            memory or if number of sensorsis too high

zone-geometry = 2
zone-geometry.type = IntegerParameter
zone-geometry.help = geometry simplification, level of simplification of the zone geometry

surrounding-geometry = 5
surrounding-geometry.type = IntegerParameter
surrounding-geometry.help = geometry simplification, level of simplification of the district geometry

consider-windows = true
consider-windows.type = BooleanParameter
consider-windows.help = boolean to consider or not windows in the geometry

consider-floors = false
consider-floors.type = BooleanParameter
consider-floors.help = boolean to consider or not floors in the geometry

[retrofit-potential]
keep-partial-matches = true
keep-partial-matches.type = BooleanParameter
keep-partial-matches.help = keep buildings that attained one or more of the criteria

retrofit-scenario-name = retrofit-HVAC
retrofit-scenario-name.type = StringParameter
retrofit-scenario-name.help = the name of the scenario to create (will be placed in same parent folder as the scenario

retrofit-target-year = 2020
retrofit-target-year.type = IntegerParameter
retrofit-target-year. help = CRITERIA AGE, year to calculate for

age-threshold = 15
age-threshold.type = IntegerParameter
age-threshold.help = CRITERIA AGE, [years] threshold age of HVAC (built / retrofitted)

eui-heating-threshold = 150
eui-heating-threshold.type = RealParameter
eui-heating-threshold.help = CRITERIA ENERGY USE INTENSITY, loads to verify, threshold, leave blank to ignore these
                             criteria

eui-hot-water-threshold = 50
eui-hot-water-threshold.type = RealParameter
eui-hot-water-threshold.help = CRITERIA ENERGY USE INTENSITY, loads to verify, threshold, leave blank to ignore these
                               criteria

eui-cooling-threshold = 4
eui-cooling-threshold.type = RealParameter
eui-cooling-threshold.help = CRITERIA ENERGY USE INTENSITY, loads to verify, threshold, leave blank to ignore these
                             criteria

eui-electricity-threshold = 20
eui-electricity-threshold.type = RealParameter
eui-electricity-threshold.help = CRITERIA ENERGY USE INTENSITY, loads to verify, threshold, leave blank to ignore these
                                 criteria
emissions-operation-threshold = 30
emissions-operation-threshold.type = RealParameter
emissions-operation-threshold.help = CRITERIA EMISSIONS, threshold, leave blank to ignore these criteria

heating-costs-threshold = 2
heating-costs-threshold.type = RealParameter
heating-costs-threshold.help = CRITERIA COSTS, threshold, leave blank to ignore these criteria

hot-water-costs-threshold = 2
hot-water-costs-threshold.type = RealParameter
hot-water-costs-threshold.help = CRITERIA COSTS, threshold, leave blank to ignore these criteria

cooling-costs-threshold = 2
cooling-costs-threshold.type = RealParameter
cooling-costs-threshold.help = CRITERIA COSTS, threshold, leave blank to ignore these criteria

electricity-costs-threshold = 2
electricity-costs-threshold.type = RealParameter
electricity-costs-threshold.help = CRITERIA COSTS, threshold, leave blank to ignore these criteria

heating-losses-threshold = 15
heating-losses-threshold.type = RealParameter
heating-losses-threshold.help = CASE OF THERMAL LOSSES, threshold, leave blank to ignore these criteria

hot-water-losses-threshold = 15
hot-water-losses-threshold.type = RealParameter
hot-water-losses-threshold.help = CASE OF THERMAL LOSSES, threshold, leave blank to ignore these criteria

cooling-losses-threshold = 15
cooling-losses-threshold.type = RealParameter
cooling-losses-threshold.help = CASE OF THERMAL LOSSES, threshold, leave blank to ignore these criteria

[sensitivity-demand]
method = sobol
method.type = ChoiceParameter
method.choices = morris sobol
method.help = Method to use valid values: "morris", "sobol"

num-samples = 1000
num-samples.type = IntegerParameter
num-samples.help = number of samples (generally 1000 or until it converges)

calc-second-order = false
calc-second-order.type = BooleanParameter
calc-second-order.help = (sobol) calc_second_order parameter

grid-jump = 2
grid-jump.type = IntegerParameter
grid-jump.help = (morris) grid_jump parameter

num-levels = 4
num-levels.type = IntegerParameter
num-levels.help = (morris) num_levels parameter

samples-folder = ../samples
samples-folder.type = RelativePathParameter
samples-folder.help = folder (relative to scenario) to place the output files (samples.npy, problem.pickle) in

variable-groups = ENVELOPE INDOOR_COMFORT INTERNAL_LOADS
variable-groups.type = ListParameter
variable-groups.help = list of variable groups. Valid values: ENVELOPE, INDOOR_COMFORT, INTERNAL_LOADS, SYSTEMS, ECONOMIC
                       (these are the sheet names in the uncertainty_distributions.xls file)

sample-index = 0
sample-index.help=Zero-based index into the samples list to simulate
sample-index.type=IntegerParameter

number-of-simulations = 1
number-of-simulations.type = IntegerParameter
number-of-simulations.help = number of simulations to perform, default 1

simulation-folder = ../simulation
simulation-folder.type = RelativePathParameter
simulation-folder.help = folder to copy the reference case to for simulation

output-parameters = QHf_MWhyr QCf_MWhyr Ef_MWhyr QEf_MWhyr QHf0_kW QCf0_kW Ef0_kW
output-parameters.type = ListParameter
output-parameters.help = output parameters to use

temporal-scale = yearly
temporal-scale.type = ChoiceParameter
temporal-scale.choices = yearly monthly
temporal-scale.help = temporal scale of analysis (monthly or yearly)

[dbf-tools]
#configuration for tools like  and dbf-to-excel
excel-file = C:\reference-case-open\baseline\inputs\building-properties\technical_systems.xls
dbf-file = C:\reference-case-open\baseline\inputs\building-properties\technical_systems.dbf

[test]
reference-cases = open
reference-cases.type = ListParameter
reference-cases.help = List of reference cases to run - check cea/tests/dodo.py@REFERENCE_CASES for the full list

