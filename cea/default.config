[general]
scenario = C:\reference-case-open\baseline
scenario.type = PathParameter
scenario.help = (full) path to the scenario to run

weather = Zug
weather.type = WeatherPathParameter
weather.help = either a full path to a weather file or the name of one of the weather files shipped with the CEA

multiprocessing = true
multiprocessing.type = BooleanParameter
multiprocessing.help = run

region = CH
region.type = ChoiceParameter
region.choices = CH SIN custom
region.help = the region to use for the databases (either CH or SIN) - set to "custom" if you want to edit them


[data-helper]
archetypes = comfort architecture HVAC internal-loads
archetypes.type = ListParameter
archetypes.help = List of archetypes to process

[demand-graphs]
demand-fields = Ealf_kWh Qhsf_kWh Qwwf_kWh Qcsf_kWh
demand-fields.type = ListParameter
demand-fields.help = list of fields in the demand output to analyze

[heatmaps]
file-to-analyze = outputs/data/demand/Total_demand.csv
file-to-analyze.type = RelativePathParameter
file-to-analyze.help = file name to analyze (relative path name to general/scenario)

heatmaps-fields = Qcs_MWhyr Qhs_MWhyr
heatmaps-fields.type = ListParameter
heatmaps-fields.help = space-separated list of columns in the file to analyze

[operation-costs]
plot-qww = true
plot-qww.type = BooleanParameter
plot-qww.help = Set to true to plot Qww

plot-qhs = true
plot-qhs.type = BooleanParameter
plot-qhs.help = Set to true to plot Qhs

plot-qcs = true
plot-qcs.type = BooleanParameter
plot-qcs.help = Set to true to plot Qcs

plot-qcdata = true
plot-qcdata.type = BooleanParameter
plot-qcdata.help = Set to true to plot Qcdata

plot-qcrefri = true
plot-qcrefri.type = BooleanParameter
plot-qcrefri.help = Set to true to plot Qcrefri

plot-eal = true
plot-eal.type = BooleanParameter
plot-eal.help = Set to true to plot Eal

plot-eaux = true
plot-eaux.type = BooleanParameter
plot-eaux.help = Set to true to plot Eaux

plot-epro = true
plot-epro.type = BooleanParameter
plot-epro.help = Set to true to plot Epro

plot-edata = true
plot-edata.type = BooleanParameter
plot-edata.help = Set to true to plot Edata

[embodied-energy]
year-to-calculate = 2020
year-to-calculate.type = IntegerParameter
year-to-calculate.help = The year to base the calculations on

[scenario-plots]
project = ..
project.type = RelativePathParameter
project.help = relative path to the folder containing the scenarios (relative to the scenario)

scenarios = baseline scenario1 scenario2
scenarios.type = ListParameter
scenarios.help = list of scenarios to plot (subdirectories of the project)

output-path = C:\reference-case-open\scenario-plots.pdf
output-path.type = PathParameter
output-path.help = path of the output pdf file to create

[demand]
heating-season-start = 2017-08-01
heating-season-end = 2017-03-01
has-heating-season = true
cooling-season-start = 2017-03-02
cooling-season-end = 2017-07-31
has-cooling-season = true
use-dynamic-infiltration-calculation = false

[radiation]
latitude =
longitude =
year =  2014
year.type = Parameter
year.help = 

[solar]
# site specific input
# format: yyyy-mm-dd
date-start = 2016-01-01

# type of panels
# for PVT, please choose type_PVpanel = 'PV1', type_SCpanel = 'SC1'
# PV1: monocrystalline, PV2: poly, PV3: amorphous. please refer to supply system database.
type-PVpanel = PV1

# SC1: flat plat collectors, SC2: evacuated tubes
type-SCpanel = SC1

# installed locations
# flag for considering panels on roof
panel-on-roof = True

# flag for considering panels on wall
panel-on-wall = True

# filtering criteria: at least a minimum production of this % from the maximum in the area.
min-radiation = 0.75

# panel spacing
# desired hours of solar window on the solstice
solar-window-solstice = 4

# inlet temperature of solar collectors [C]
T-in-SC = 75
# inlet temperature of PVT panels [C]
T-in-PVT = 35
# pressure losses per length of pipe according to Solar District Heating Guidelines, [Pa/m]
dpl = 200
dpl.type = Parameter
dpl.help = 
# additional loss factor due to accessories
fcr = 1.3
fcr.type = Parameter
fcr.help = 
# water density [kg/m3]
Ro = 1000
Ro.type = Parameter
Ro.help = 
# pump efficiency
eff-pumping = 0.6

# solar collectors heat losses
# linear heat transmittance coefficient of piping (2*pi*k/ln(Do/Di))) [W/mK]
k-msc-max = 0.217

[radiation-daysim]

# a list of buildings to run the simulation for - leave blank to simulate all buildings
buildings =

# Daysism radiation simulation parameters
rad-n = 2
rad-af = 'file'
rad-ab = 4
rad-ad = 512
rad-as = 256
rad-ar = 128
rad-aa = 0.15
rad-lr = 8
rad-st = 0.15
rad-sj = 0.7
rad-lw = 0.002
rad-dj = 0.7
rad-ds = 0.15
rad-dr = 3
rad-dp = 512

# GRID FOR THE SENSORS
# use 100 (maximum) if you want only one point per surface
sensor-x-dim = 5
sensor-y-dim = 5


# terrain parameters
# reflection for the terrain
e-terrain = 0.8

# simulation parameters
# min number of groups of buildings sent for multiprocessing (the lesss, the less the number of sensors to evaluate
# limit the number if running out of memory or if number of sensorsis too high
n-buildings-in-chunk = 1

# geometry simplification
# level of simplification of the zone geometry
zone-geometry = 2
# level of simplification of the district geometry
surrounding-geometry = 5
# boolean to consider or not windows in the geometry
consider-windows = True
# boolean to consider or not floors in the geometry
consider-floors = True

[retrofit-potential]
# FLAGS
# keep buildings that attained one or more of the criteria
keep-partial-matches = true

# CRITERIA AGE
retrofit-scenario-name = retrofit-HVAC

# year to calculate for
retrofit-target-year = 2020

# [years] threshold age of HVAC (built / retrofitted)
age-threshold = 15

# CRITERIA ENERGY USE INTENSITY
# loads to verify, threshold, leave blank to ignore these criteria
eui-heating-threshold = 150
eui-hot-water-threshold = 50
eui-cooling-threshold = 4
eui-electricity-threshold = 20
#
# # CRITERIA EMISSIONS
# threshold, leave blank to ignore these criteria
emissions-operation-threshold = 30
#
# # CRITERIA COSTS
# threshold, leave blank to ignore these criteria
heating-costs-threshold = 2
hot-water-costs-threshold = 2
cooling-costs-threshold = 2
electricity-costs-threshold = 2
#
# # CASE OF THERMAL LOSSES
# threshold, leave blank to ignore these criteria
heating-losses-threshold = 15
hot-water-losses-threshold = 15
cooling-losses-threshold = 15

[sensitivity-demand]
method = sobol
method.type = ChoiceParameter
method.choices = morris sobol
method.help = Method to use valid values: "morris", "sobol"

num-samples = 1000
num-samples.type = IntegerParameter
num-samples.help = number of samples (generally 1000 or until it converges)

calc-second-order = false
calc-second-order.type = BooleanParameter
calc-second-order.help = (sobol) calc_second_order parameter

grid-jump = 2
grid-jump.type = IntegerParameter
grid-jump.help = (morris) grid_jump parameter

num-levels = 4
num-levels.type = IntegerParameter
num-levels.help = (morris) num_levels parameter

samples-folder = ../samples
samples-folder.type = RelativePathParameter
samples-folder.help = folder (relative to scenario) to place the output files (samples.npy, problem.pickle) in

# list of variable groups. Valid values: ENVELOPE, INDOOR_COMFORT, INTERNAL_LOADS, SYSTEMS, ECONOMIC
# (these are the sheet names in the uncertainty_distributions.xls file)
variable-groups = ENVELOPE INDOOR_COMFORT INTERNAL_LOADS

