digraph network_layout {
    rankdir="LR";
    graph [overlap=false, fontname=arial];
    node [shape=box, style=filled, color=white, fontsize=15, fontname=arial, fixedsize=true, width=5];
    edge [fontname=arial, fontsize = 15]
    newrank=true
    subgraph cluster_legend {
        fontsize=25
        style=invis
        "process"[style=filled, fillcolor="#3FC0C2", shape=note, fontsize=20, fontname="arial"]
        "inputs" [style=filled, shape=folder, color=white, fillcolor="#E1F2F2", fontsize=20]
        "outputs"[style=filled, shape=folder, color=white, fillcolor="#aadcdd", fontsize=20]
        "inputs"->"process"[style=invis]
        "process"->"outputs"[style=invis]
    }
    "network_layout"[style=filled, color=white, fillcolor="#3FC0C2", shape=note, fontsize=20, fontname=arial];
    subgraph cluster_0_out {
        style = filled;
        color = "#aadcdd";
        fontsize = 20;
        rank=same;
        label="data/thermal-network/DH";
        get_network_layout_edges_shapefile[label="edges.shp"];
        get_network_layout_nodes_shapefile[label="nodes.shp"];
    }
    subgraph cluster_1_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="inputs/building-geometry";
        get_zone_geometry[label="zone.shp"];
    }
    subgraph cluster_2_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="inputs/networks";
        get_street_network[label="streets.shp"];
    }
    subgraph cluster_3_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="outputs/data/demand";
        get_total_demand[label="Total_demand.csv"];
    }
    get_street_network -> "network_layout"[label="(get_street_network)"];
    get_total_demand -> "network_layout"[label="(get_total_demand)"];
    get_zone_geometry -> "network_layout"[label="(get_zone_geometry)"];
    "network_layout" -> get_network_layout_edges_shapefile[label="(get_network_layout_edges_shapefile)"];
    "network_layout" -> get_network_layout_nodes_shapefile[label="(get_network_layout_nodes_shapefile)"];
    }