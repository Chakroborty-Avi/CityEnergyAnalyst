digraph demand {
    rankdir="LR";
    graph [overlap=false, fontname=arial];
    node [shape=box, style=filled, color=white, fontsize=15, fontname=arial, fixedsize=true, width=5];
    edge [fontname=arial, fontsize = 15]
    newrank=true
    subgraph cluster_legend {
        fontsize=25
        style=invis
        "process"[style=filled, fillcolor="#3FC0C2", shape=note, fontsize=20, fontname="arial"]
        "inputs" [style=filled, shape=folder, color=white, fillcolor="#E1F2F2", fontsize=20]
        "outputs"[style=filled, shape=folder, color=white, fillcolor="#aadcdd", fontsize=20]
        "inputs"->"process"[style=invis]
        "process"->"outputs"[style=invis]
    }
    "demand"[style=filled, color=white, fillcolor="#3FC0C2", shape=note, fontsize=20, fontname=arial];
    subgraph cluster_0_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="inputs/building-geometry";
        get_zone_geometry[label="zone.shp"];
    }
    subgraph cluster_1_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="inputs/building-properties";
        get_building_air_conditioning[label="air_conditioning_systems.dbf"];
        get_building_architecture[label="architecture.dbf"];
        get_building_comfort[label="indoor_comfort.dbf"];
        get_building_internal[label="internal_loads.dbf"];
        get_building_supply[label="supply_systems.dbf"];
        get_building_typology[label="typology.dbf"];
    }
    subgraph cluster_2_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="inputs/building-properties/schedules";
        get_building_weekly_schedules[label="B001.csv"];
    }
    subgraph cluster_3_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="inputs/technology/assemblies";
        get_database_air_conditioning_systems[label="HVAC.xls"];
        get_database_envelope_systems[label="ENVELOPE.xls"];
        get_database_supply_assemblies[label="SUPPLY.xls"];
    }
    subgraph cluster_4_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="inputs/weather";
        get_weather_file[label="weather.epw"];
    }
    subgraph cluster_5_out {
        style = filled;
        color = "#aadcdd";
        fontsize = 20;
        rank=same;
        label="outputs/data/demand";
        get_demand_results_file[label="B001.csv"];
        get_total_demand[label="Total_demand.csv"];
    }
    subgraph cluster_6_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="outputs/data/occupancy";
        get_schedule_model_file[label="B001.csv"];
    }
    subgraph cluster_7_in {
        style = filled;
        color = "#E1F2F2";
        fontsize = 20;
        rank=same;
        label="outputs/data/solar-radiation";
        get_radiation_building[label="{building}_radiation.csv"];
        get_radiation_building_sensors[label="B001_insolation_Whm2.json"];
        get_radiation_metadata[label="B001_geometry.csv"];
    }
    get_building_air_conditioning -> "demand"[label="(get_building_air_conditioning)"];
    get_building_architecture -> "demand"[label="(get_building_architecture)"];
    get_building_comfort -> "demand"[label="(get_building_comfort)"];
    get_building_internal -> "demand"[label="(get_building_internal)"];
    get_building_supply -> "demand"[label="(get_building_supply)"];
    get_building_typology -> "demand"[label="(get_building_typology)"];
    get_building_weekly_schedules -> "demand"[label="(get_building_weekly_schedules)"];
    get_database_air_conditioning_systems -> "demand"[label="(get_database_air_conditioning_systems)"];
    get_database_envelope_systems -> "demand"[label="(get_database_envelope_systems)"];
    get_database_supply_assemblies -> "demand"[label="(get_database_supply_assemblies)"];
    get_radiation_building -> "demand"[label="(get_radiation_building)"];
    get_radiation_building_sensors -> "demand"[label="(get_radiation_building_sensors)"];
    get_radiation_metadata -> "demand"[label="(get_radiation_metadata)"];
    get_schedule_model_file -> "demand"[label="(get_schedule_model_file)"];
    get_weather_file -> "demand"[label="(get_weather_file)"];
    get_zone_geometry -> "demand"[label="(get_zone_geometry)"];
    "demand" -> get_demand_results_file[label="(get_demand_results_file)"];
    "demand" -> get_total_demand[label="(get_total_demand)"];
    }